[tox]
minversion = 3.7.0
envlist =
  pep8
  py27
  py38
  py39
  py310
  check

[testenv]
install_command = pip install {opts} {packages}
setenv =
  VIRTUAL_ENV={envdir}
  LANG=en_US.UTF-8
  LANGUAGE=en_US:en
  LC_ALL=C
whitelist_externals = bash
commands = python -m pytest {posargs}

[testenv:pep8]
install_command = pip install {opts} {packages}
setenv =
  VIRTUAL_ENV={envdir}
  LANG=en_US.UTF-8
  LANGUAGE=en_US:en
  LC_ALL=C
whitelist_externals = bash,test
commands = flake8 --verbose
deps =
  pep8
  flake8

[testenv:py27]
basepython = python2.7
install_command = pip install {opts} {packages}
setenv =
  VIRTUAL_ENV={envdir}
  LANG=en_US.UTF-8
  LANGUAGE=en_US:en
  LC_ALL=C
  ANSIBLE_STDOUT_CALLBACK=yaml
; I would really like to use pytest-ansible or pytest-ansible-playbook but I
; simply can't get them to work as expected.
commands =
  ansible-playbook --inventory {toxinidir}/test/inventory.yml {toxinidir}/test/playbook.yml
deps =
  ansible
  python-ldap

[testenv:py38]
basepython = python3.8
install_command = pip install {opts} {packages}
setenv =
  VIRTUAL_ENV={envdir}
  LANG=en_US.UTF-8
  LANGUAGE=en_US:en
  LC_ALL=C
  ANSIBLE_STDOUT_CALLBACK=yaml
commands =
  ansible-playbook --inventory {toxinidir}/test/inventory.yml {toxinidir}/test/playbook.yml
deps =
  ansible
  python-ldap

[testenv:py39]
basepython = python3.9
install_command = pip install {opts} {packages}
setenv =
  VIRTUAL_ENV={envdir}
  LANG=en_US.UTF-8
  LANGUAGE=en_US:en
  LC_ALL=C
  ANSIBLE_STDOUT_CALLBACK=yaml
commands =
  ansible-playbook --inventory {toxinidir}/test/inventory.yml {toxinidir}/test/playbook.yml
deps =
  ansible
  python-ldap

[testenv:py310]
basepython = python3.10
install_command = pip install {opts} {packages}
setenv =
  VIRTUAL_ENV={envdir}
  LANG=en_US.UTF-8
  LANGUAGE=en_US:en
  LC_ALL=C
  ANSIBLE_STDOUT_CALLBACK=yaml
commands =
  ansible-playbook --inventory {toxinidir}/test/inventory.yml {toxinidir}/test/playbook.yml
deps =
  ansible
  python-ldap

[testenv:check]
install_command = pip install {opts} {packages}
setenv =
  VIRTUAL_ENV={envdir}
  LANG=en_US.UTF-8
  LANGUAGE=en_US:en
  LC_ALL=C
deps =
  twine
usedevelop = False
whitelist_externals = bash,test
commands =
  python -m setup check --metadata --restructuredtext --strict --verbose
  twine check .tox/dist/*
